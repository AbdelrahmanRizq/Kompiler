// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parsetable.proto

#include "parsetable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace parser {
class ParseTable_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseTable_Entry>
      _instance;
} _ParseTable_Entry_default_instance_;
class ParseTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseTable>
      _instance;
} _ParseTable_default_instance_;
}  // namespace parser
namespace protobuf_parsetable_2eproto {
void InitDefaultsParseTable_EntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::parser::_ParseTable_Entry_default_instance_;
    new (ptr) ::parser::ParseTable_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::parser::ParseTable_Entry::InitAsDefaultInstance();
}

void InitDefaultsParseTable_Entry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsParseTable_EntryImpl);
}

void InitDefaultsParseTableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_parsetable_2eproto::InitDefaultsParseTable_Entry();
  {
    void* ptr = &::parser::_ParseTable_default_instance_;
    new (ptr) ::parser::ParseTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::parser::ParseTable::InitAsDefaultInstance();
}

void InitDefaultsParseTable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsParseTableImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable_Entry, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable_Entry, nonterm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable_Entry, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable_Entry, production_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable, starting_symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::parser::ParseTable, entries_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::parser::ParseTable_Entry)},
  { 13, 20, sizeof(::parser::ParseTable)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::parser::_ParseTable_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::parser::_ParseTable_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "parsetable.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020parsetable.proto\022\006parser\"\346\001\n\nParseTabl"
      "e\022\027\n\017starting_symbol\030\001 \002(\t\022)\n\007entries\030\002 "
      "\003(\0132\030.parser.ParseTable.Entry\032\223\001\n\005Entry\022"
      ".\n\005state\030\001 \002(\0162\037.parser.ParseTable.Entry"
      ".States\022\017\n\007nonterm\030\002 \002(\t\022\014\n\004term\030\003 \002(\t\022\022"
      "\n\nproduction\030\004 \001(\t\"\'\n\006States\022\t\n\005ERROR\020\000\022"
      "\010\n\004SYNC\020\001\022\010\n\004PROD\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "parsetable.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_parsetable_2eproto
namespace parser {
const ::google::protobuf::EnumDescriptor* ParseTable_Entry_States_descriptor() {
  protobuf_parsetable_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_parsetable_2eproto::file_level_enum_descriptors[0];
}
bool ParseTable_Entry_States_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ParseTable_Entry_States ParseTable_Entry::ERROR;
const ParseTable_Entry_States ParseTable_Entry::SYNC;
const ParseTable_Entry_States ParseTable_Entry::PROD;
const ParseTable_Entry_States ParseTable_Entry::States_MIN;
const ParseTable_Entry_States ParseTable_Entry::States_MAX;
const int ParseTable_Entry::States_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ParseTable_Entry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseTable_Entry::kStateFieldNumber;
const int ParseTable_Entry::kNontermFieldNumber;
const int ParseTable_Entry::kTermFieldNumber;
const int ParseTable_Entry::kProductionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseTable_Entry::ParseTable_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_parsetable_2eproto::InitDefaultsParseTable_Entry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:parser.ParseTable.Entry)
}
ParseTable_Entry::ParseTable_Entry(const ParseTable_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonterm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nonterm()) {
    nonterm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonterm_);
  }
  term_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_term()) {
    term_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.term_);
  }
  production_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_production()) {
    production_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.production_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:parser.ParseTable.Entry)
}

void ParseTable_Entry::SharedCtor() {
  _cached_size_ = 0;
  nonterm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  term_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  production_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
}

ParseTable_Entry::~ParseTable_Entry() {
  // @@protoc_insertion_point(destructor:parser.ParseTable.Entry)
  SharedDtor();
}

void ParseTable_Entry::SharedDtor() {
  nonterm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  term_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  production_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParseTable_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParseTable_Entry::descriptor() {
  ::protobuf_parsetable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsetable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParseTable_Entry& ParseTable_Entry::default_instance() {
  ::protobuf_parsetable_2eproto::InitDefaultsParseTable_Entry();
  return *internal_default_instance();
}

ParseTable_Entry* ParseTable_Entry::New(::google::protobuf::Arena* arena) const {
  ParseTable_Entry* n = new ParseTable_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParseTable_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:parser.ParseTable.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!nonterm_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nonterm_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!term_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*term_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!production_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*production_.UnsafeRawStringPointer())->clear();
    }
  }
  state_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParseTable_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:parser.ParseTable.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .parser.ParseTable.Entry.States state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::parser::ParseTable_Entry_States_IsValid(value)) {
            set_state(static_cast< ::parser::ParseTable_Entry_States >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string nonterm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonterm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nonterm().data(), static_cast<int>(this->nonterm().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parser.ParseTable.Entry.nonterm");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string term = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_term()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->term().data(), static_cast<int>(this->term().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parser.ParseTable.Entry.term");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string production = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_production()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->production().data(), static_cast<int>(this->production().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parser.ParseTable.Entry.production");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:parser.ParseTable.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:parser.ParseTable.Entry)
  return false;
#undef DO_
}

void ParseTable_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:parser.ParseTable.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .parser.ParseTable.Entry.States state = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // required string nonterm = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nonterm().data(), static_cast<int>(this->nonterm().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.Entry.nonterm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nonterm(), output);
  }

  // required string term = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->term().data(), static_cast<int>(this->term().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.Entry.term");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->term(), output);
  }

  // optional string production = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->production().data(), static_cast<int>(this->production().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.Entry.production");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->production(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:parser.ParseTable.Entry)
}

::google::protobuf::uint8* ParseTable_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:parser.ParseTable.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .parser.ParseTable.Entry.States state = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // required string nonterm = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nonterm().data(), static_cast<int>(this->nonterm().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.Entry.nonterm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nonterm(), target);
  }

  // required string term = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->term().data(), static_cast<int>(this->term().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.Entry.term");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->term(), target);
  }

  // optional string production = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->production().data(), static_cast<int>(this->production().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.Entry.production");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->production(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:parser.ParseTable.Entry)
  return target;
}

size_t ParseTable_Entry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:parser.ParseTable.Entry)
  size_t total_size = 0;

  if (has_nonterm()) {
    // required string nonterm = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonterm());
  }

  if (has_term()) {
    // required string term = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->term());
  }

  if (has_state()) {
    // required .parser.ParseTable.Entry.States state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  return total_size;
}
size_t ParseTable_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:parser.ParseTable.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required string nonterm = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonterm());

    // required string term = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->term());

    // required .parser.ParseTable.Entry.States state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string production = 4;
  if (has_production()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->production());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParseTable_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:parser.ParseTable.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseTable_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParseTable_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:parser.ParseTable.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:parser.ParseTable.Entry)
    MergeFrom(*source);
  }
}

void ParseTable_Entry::MergeFrom(const ParseTable_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:parser.ParseTable.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nonterm();
      nonterm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonterm_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_term();
      term_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.term_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_production();
      production_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.production_);
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParseTable_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:parser.ParseTable.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseTable_Entry::CopyFrom(const ParseTable_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:parser.ParseTable.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseTable_Entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  return true;
}

void ParseTable_Entry::Swap(ParseTable_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParseTable_Entry::InternalSwap(ParseTable_Entry* other) {
  using std::swap;
  nonterm_.Swap(&other->nonterm_);
  term_.Swap(&other->term_);
  production_.Swap(&other->production_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParseTable_Entry::GetMetadata() const {
  protobuf_parsetable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsetable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParseTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseTable::kStartingSymbolFieldNumber;
const int ParseTable::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseTable::ParseTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_parsetable_2eproto::InitDefaultsParseTable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:parser.ParseTable)
}
ParseTable::ParseTable(const ParseTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  starting_symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_starting_symbol()) {
    starting_symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.starting_symbol_);
  }
  // @@protoc_insertion_point(copy_constructor:parser.ParseTable)
}

void ParseTable::SharedCtor() {
  _cached_size_ = 0;
  starting_symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ParseTable::~ParseTable() {
  // @@protoc_insertion_point(destructor:parser.ParseTable)
  SharedDtor();
}

void ParseTable::SharedDtor() {
  starting_symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParseTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParseTable::descriptor() {
  ::protobuf_parsetable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsetable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParseTable& ParseTable::default_instance() {
  ::protobuf_parsetable_2eproto::InitDefaultsParseTable();
  return *internal_default_instance();
}

ParseTable* ParseTable::New(::google::protobuf::Arena* arena) const {
  ParseTable* n = new ParseTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParseTable::Clear() {
// @@protoc_insertion_point(message_clear_start:parser.ParseTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!starting_symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*starting_symbol_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParseTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:parser.ParseTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string starting_symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_starting_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->starting_symbol().data(), static_cast<int>(this->starting_symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parser.ParseTable.starting_symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .parser.ParseTable.Entry entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:parser.ParseTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:parser.ParseTable)
  return false;
#undef DO_
}

void ParseTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:parser.ParseTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string starting_symbol = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->starting_symbol().data(), static_cast<int>(this->starting_symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.starting_symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->starting_symbol(), output);
  }

  // repeated .parser.ParseTable.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entries(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:parser.ParseTable)
}

::google::protobuf::uint8* ParseTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:parser.ParseTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string starting_symbol = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->starting_symbol().data(), static_cast<int>(this->starting_symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parser.ParseTable.starting_symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->starting_symbol(), target);
  }

  // repeated .parser.ParseTable.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:parser.ParseTable)
  return target;
}

size_t ParseTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:parser.ParseTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string starting_symbol = 1;
  if (has_starting_symbol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->starting_symbol());
  }
  // repeated .parser.ParseTable.Entry entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParseTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:parser.ParseTable)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParseTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:parser.ParseTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:parser.ParseTable)
    MergeFrom(*source);
  }
}

void ParseTable::MergeFrom(const ParseTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:parser.ParseTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_starting_symbol()) {
    set_has_starting_symbol();
    starting_symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.starting_symbol_);
  }
}

void ParseTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:parser.ParseTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseTable::CopyFrom(const ParseTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:parser.ParseTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseTable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void ParseTable::Swap(ParseTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParseTable::InternalSwap(ParseTable* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  starting_symbol_.Swap(&other->starting_symbol_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParseTable::GetMetadata() const {
  protobuf_parsetable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsetable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace parser

// @@protoc_insertion_point(global_scope)
